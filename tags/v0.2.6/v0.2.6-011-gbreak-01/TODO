-- complete

* input, grep(local版)
* nfile, map, each-element-mapper(local版)
* each-element-selector(local版)
* here(local版)
* smap(local版)
* group_by(local版)
   * njobのstatusを通知できるようにする
   * BJobのnode作成の待ちをなくす必要がある. nodeを動的に生成する
   * 多入力import対応
   * BInputtable, NSingleExportableリファクタリング
* zip(local版)

* input(backend分散版)
* here(backend分散版)
* each-element-mapper(backend分散版)
* each-element-selector(backend分散版)
* group_by(backend分散版)
* zip(backend分散版)

* input(backend/node分散版)
* here(backend/node分散版)
* each-element-mapper(backend/node分散版)
* each-element-selector(backend/node分散版)
* group_by(backend/node分散版)
* zip(backend/node分散版)

* input(完全分散版)
* here(完全分散版)
* each-element-mapper(完全分散版)
* each-element-selector(完全分散版)
* group_by(完全分散版)
* zip(完全分散版)
* processorを割り当てるのをmasterからcontroller?へ
* Controller#assign_new_processor_n 追加
* vfile
* output
* split
* local_file_input
* local_file_output
* local_file_input で スプリット指定できるようにする
* pool variable
* job instance variable
* job pool variable(仮実装)
* sort
* barrier
  - NodeArrived
  - DataArrived
  - AllData
  - BBarrierBlockCond
  - NodeCreation
  - BBarrierMemoryBuffer
  - Stream
* BGEIN/END
* there
* varray
  - OutputVArray
  - InputVArray
* pool_variable で リモート実行を追加
  - ruby-1.9 では def_pool_variable で Mutexが 定義できない
* k-means
  - 初版
* k-means
  - dc_deep_copy
  - block 引数(だいぶ解消)
* Ruby1.9対応
* inject
* processor 終了
  - node: @processors 排他制御
  - processor: njobの状態を通知
  - clientが終了したとき controller/processor を終了する
  - processor: client 毎に割り当てるように変更
  - varray: 配置管理
* processor 終了
* ブロック内で例外が発生したときの例外の伝搬(barrier除く)
* gbreak
  - NJob/BJob/BInputtable

-- scheduled
* gbreak
  - BInput/NInput
  - Find

* ブロック内で例外が発生したときの例外の伝搬(barrier)
* frycp
* barrier
  - BBarrierFileBuffer
* NJOBの生成のされ方がきになる(test 15.1.2.1参照)

-- identified
* ffile-output で 1つのimportで済む版(シリアライズ性保証なし)
  # BGroupBy#start_watch_all_node_imported で exp.outputからexpへの逆引を作る
* GroupBy
  + hash値とかでまとめる
  + exportとimportの接続をBGroupBy経由でしないとイマイチ(これはよしとなった)
* WC: hashとGroupByの融合?
* fairy sh
* unbound job
  + インプットにバウンドされてないjob
  + jobのグルーピング化
* input/outputの再接続
* ffileの順番の保持 && 後続の順番の保持 がされているかの確認
* reduce
* break/next
* find
* merge

* join
* stream の stream?
* bind
* 直積

